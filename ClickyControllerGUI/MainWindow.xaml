<Window x:Class="ClickyControllerGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClickyControllerGUI"
        xmlns:viewmodel="clr-namespace:ClickyControllerGUI.ViewModels"
        xmlns:converter="clr-namespace:ClickyControllerGUI.Utilities"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Title="Clicky Controller" Height="350" Width="500" MinHeight="350" MinWidth="500">

    <Window.Resources>
        <viewmodel:CommandViewModel x:Key="CommandViewModel"/>
        <converter:MethodToDisplayNameConverter x:Key="MethodToDisplayNameConverter"/>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>



    <Grid x:Name="LayoutBase" Margin="15" DataContext="{Binding Source={StaticResource CommandViewModel}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" x:Name="CommandListOptions">
            <Label>Command List</Label>

            <TreeView x:Name="CommandOptionsList" ItemsSource="{Binding CommandListOptions}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="True"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Value}">
                        <TextBlock Text="{Binding Path=Key}" />
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding ., Converter={StaticResource MethodToDisplayNameConverter}}" />
                                    <Button Grid.Column="1" Content="+" Command="{Binding AddItemToListCommand, Mode=OneWay, Source={StaticResource CommandViewModel}}"
                                    CommandParameter="{Binding}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </StackPanel>

        <StackPanel Grid.Column="2">
            <ListView Name="CommandList" ItemsSource="{Binding CommandList}" 
                      Height="{Binding ElementName=LayoutBase, Path=ActualHeight}"
                      SelectedIndex="{Binding SelectedCommandIndex, Mode=TwoWay}"
                      dd:DragDrop.IsDropTarget="True" dd:DragDrop.IsDragSource="True">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.InputBindings>
                    <KeyBinding Key="Backspace" Command="{Binding RemoveItemFromCommandListCommand, Source={StaticResource CommandViewModel}}" 
                                CommandParameter="{Binding ElementName=CommandList, Path=SelectedItem}"/>
                </ListView.InputBindings>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding Method, Converter={StaticResource MethodToDisplayNameConverter}}" />
                            <TextBox Grid.Column="2" Text="{Binding Parameters}" TextWrapping="Wrap"/>
                            <Button Grid.Column="3" Content="-" Command="{Binding RemoveItemFromCommandListCommand, Source={StaticResource CommandViewModel}}"
                                    CommandParameter="{Binding}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <StackPanel Grid.Column="4">
            <Button Height="20" Content="Run" Command="{Binding RunScriptCommand}"/>
            <Button Height="20" Content="Import" Command="{Binding ImportScriptCommand}"/>
            <Button Height="20" Content="Save" Command="{Binding SaveScriptCommand}"/>
        </StackPanel>
    </Grid>

</Window>
